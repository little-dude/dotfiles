# Change default key-binding to ctrl+s. 
# ctrl+b is an emacs shortcut also used in bash
# and ctrl+s is good to remap, because it freezes the terminal.
unbind C-b
set -g prefix C-s

# Colors
set -g default-terminal "screen-256color"
#source /usr/share/tmux/solarized-dark.conf

# Don't remember
set-window-option -g automatic-rename off
set-option -g allow-rename off

# Vim keys.
# Have vim shortcuts in copy mode!
setw -g mode-keys vi

# Set scrollback history to something huge.
# Whenver I want to clear it: ctrl+s :clear-history
set -g history-limit 1000000

# Jump to last active window with ctrl+s ctrl+s
bind-key C-s last-window

# Begin window numbering at 1 (instead of zero)
set -g base-index 1

# Use the scrollbar of the terminal
# see http://superuser.com/questions/310251/use-terminal-scrollbar-with-tmux
set -g terminal-overrides 'rxvt*,xterm*:smcup@:rmcup@'

# Status bar https://gist.github.com/zolrath/2305333
set -g status-style fg=white,bg=colour234
set -g window-status-activity-style bold
set -g pane-border-style fg=colour245
set -g pane-active-border-style fg=colour39
set -g message-style fg=colour16,bg=colour221,bold

set -g status-left '#[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #S #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=colour88,bg=colour234,bold] #I#[fg=white,nobold] #W #( [ #{window_panes} -gt 1 ] && echo \"<#{window_panes}>\") |"
set -g window-status-current-format "#[fg=colour52,bg=colour39,bold] #I#[fg=colour25,bg=colour39,noreverse] #W#( [ #{window_panes} -gt 1 ] && echo \"<#{window_panes}>\") #[fg=white,bg=colour234,nobold] |"


# Copy mode like in vim
# Steps:
#     - enter copy mode with ctrl+s [
#     - enter selection mode with v (or V for rectangular selection)
#     - copy selection with y. Text is now stored in some tmux buffer.
#     - exit copy mode
#     - paste the text with ctrl+s p
unbind p
unbind ]
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'V' send -X rectangle-toggle

# Mouse for tmux < 2.1
# set -g mode-mouse on
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on

# Mouse for tmux >= 2.1
set -g mouse on
# set -g mouse-utf8 on

# change window with ctrls+arrows
bind-key -n C-RIGHT next-window
bind-key -n C-LEFT previous-window

# Import panes
unbind i
bind i split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'

# Send a pane to its own window
unbind b
bind b break-pane -t :

# sessions:
#       - list sessions with ctrl+s l, and select the one you want
#       - kill a session by number with ctrl+s k
unbind l
bind-key l choose-session
unbind k
bind-key k command-prompt -p "Kill session :"  "kill-session -t '%%'"
unbind a
bind-key a command-prompt -p "Attach session :"  "attach-session -t '%%'"

# To avoid to have to wait after C-s <Esc>
set -s escape-time 0

# force a reload of the config file, without leaving tmux, with ctrl+s r
unbind r
bind r source-file ~/.config/tmux/work.session

# For cursor shape in neovim:
# see https://github.com/neovim/neovim/wiki/FAQ#cursor-shape-doesnt-change-in-tmux
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# We use ALT instead of CTRL because we don't want to remap CTRL-K
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l
